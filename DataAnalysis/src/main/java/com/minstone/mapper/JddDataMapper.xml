<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.minstone.mapper.JddDataMapper" >
  <resultMap id="BaseResultMap" type="com.minstone.pojo.JddData" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="one" property="one" jdbcType="INTEGER" />
    <result column="two" property="two" jdbcType="INTEGER" />
    <result column="three" property="three" jdbcType="INTEGER" />
    <result column="four" property="four" jdbcType="INTEGER" />
    <result column="five" property="five" jdbcType="INTEGER" />
    <result column="six" property="six" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, one, two, three, four, five, six
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.minstone.pojo.JddDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jdd_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jdd_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jdd_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.minstone.pojo.JddDataExample" >
    delete from jdd_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.minstone.pojo.JddData" >
    insert into jdd_data (id, one, two, 
      three, four, five, 
      six)
    values (#{id,jdbcType=INTEGER}, #{one,jdbcType=INTEGER}, #{two,jdbcType=INTEGER}, 
      #{three,jdbcType=INTEGER}, #{four,jdbcType=INTEGER}, #{five,jdbcType=INTEGER}, 
      #{six,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.minstone.pojo.JddData" >
    insert into jdd_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="one != null" >
        one,
      </if>
      <if test="two != null" >
        two,
      </if>
      <if test="three != null" >
        three,
      </if>
      <if test="four != null" >
        four,
      </if>
      <if test="five != null" >
        five,
      </if>
      <if test="six != null" >
        six,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="one != null" >
        #{one,jdbcType=INTEGER},
      </if>
      <if test="two != null" >
        #{two,jdbcType=INTEGER},
      </if>
      <if test="three != null" >
        #{three,jdbcType=INTEGER},
      </if>
      <if test="four != null" >
        #{four,jdbcType=INTEGER},
      </if>
      <if test="five != null" >
        #{five,jdbcType=INTEGER},
      </if>
      <if test="six != null" >
        #{six,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.minstone.pojo.JddDataExample" resultType="java.lang.Integer" >
    select count(*) from jdd_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jdd_data
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.one != null" >
        one = #{record.one,jdbcType=INTEGER},
      </if>
      <if test="record.two != null" >
        two = #{record.two,jdbcType=INTEGER},
      </if>
      <if test="record.three != null" >
        three = #{record.three,jdbcType=INTEGER},
      </if>
      <if test="record.four != null" >
        four = #{record.four,jdbcType=INTEGER},
      </if>
      <if test="record.five != null" >
        five = #{record.five,jdbcType=INTEGER},
      </if>
      <if test="record.six != null" >
        six = #{record.six,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jdd_data
    set id = #{record.id,jdbcType=INTEGER},
      one = #{record.one,jdbcType=INTEGER},
      two = #{record.two,jdbcType=INTEGER},
      three = #{record.three,jdbcType=INTEGER},
      four = #{record.four,jdbcType=INTEGER},
      five = #{record.five,jdbcType=INTEGER},
      six = #{record.six,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.minstone.pojo.JddData" >
    update jdd_data
    <set >
      <if test="one != null" >
        one = #{one,jdbcType=INTEGER},
      </if>
      <if test="two != null" >
        two = #{two,jdbcType=INTEGER},
      </if>
      <if test="three != null" >
        three = #{three,jdbcType=INTEGER},
      </if>
      <if test="four != null" >
        four = #{four,jdbcType=INTEGER},
      </if>
      <if test="five != null" >
        five = #{five,jdbcType=INTEGER},
      </if>
      <if test="six != null" >
        six = #{six,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.minstone.pojo.JddData" >
    update jdd_data
    set one = #{one,jdbcType=INTEGER},
      two = #{two,jdbcType=INTEGER},
      three = #{three,jdbcType=INTEGER},
      four = #{four,jdbcType=INTEGER},
      five = #{five,jdbcType=INTEGER},
      six = #{six,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <sql id="between_id">
  	<if test="startNum != null and endNum !=null">
		WHERE t.id BETWEEN #{startNum} AND #{endNum} 
	</if>
  </sql>
  <!-- 查询指定期数各期的总和 -->
   <select id="selectSumByStage" resultType="hashMap" parameterType="hashMap" >
    SELECT 
	  t.id,
	  SUM(
	    t.one + t.two + t.three + t.four + t.five + t.six
	  ) AS sum_num 
	FROM
	  jdd_data t
	  <include refid="between_id" />
	GROUP BY t.id
  </select>
  
  <!-- 纵向查询各列的最大值最小值  -->
  <select id="selectMaxAndMinByColumn" resultType="hashMap" parameterType="hashMap" >
    SELECT 
    	MAX(t.one) max_one,MIN(t.one) min_one,
    	MAX(t.two) max_two,MIN(t.two) min_two,
    	MAX(t.three) max_three,MIN(t.three) min_three,
    	MAX(t.four) max_four,MIN(t.four) min_four,
    	MAX(t.five) max_five,MIN(t.five) min_five,
    	MAX(t.six) max_six,MIN(t.six) min_six
    FROM jdd_data t 
	<include refid="between_id" />
  </select>
  
  <!-- 纵向查询各列的各个值的出现次数  -->
  <select id="selectCountByColumn" resultType="hashMap" parameterType="hashMap" >
    SELECT 
	  t.${column},
	  COUNT(*) count_num
	FROM
	  jdd_data t 
	<include refid="between_id" /> 
	GROUP BY t.${column} 
  </select>
  
  <!-- 查询 某一列数据 -->
  <select id="selectByColumn" resultType="hashMap" parameterType="hashMap"  >
    SELECT t.* FROM jdd_data t 
	<include refid="between_id" />
  </select>
  
   <!-- 查询最近出现的数值 -->
  <select id="selectLateId" resultType="hashMap" parameterType="hashMap"  >
    <![CDATA[
    	SELECT max(t.id) id FROM jdd_data t where t.id < #{id} 
    ]]>
    <if test="column!=null and column!=''">
    	and t.${column}=#{num}
    </if>
    <if test="column==null">
    	and (t.one=#{num} or t.two=#{num} or t.three=#{num} or t.four=#{num} or t.five=#{num} or t.six=#{num})
    </if>
  </select>
</mapper>