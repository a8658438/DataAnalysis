<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.minstone.mapper.JddScaleMapper" >
  <resultMap id="BaseResultMap" type="com.minstone.pojo.JddScale" >
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="late_all_scale" property="lateAllScale" jdbcType="INTEGER" />
    <result column="other_scale" property="otherScale" jdbcType="INTEGER" />
    <result column="column_avg_level" property="columnAvgLevel" jdbcType="INTEGER" />
    <result column="all_avg_level" property="allAvgLevel" jdbcType="INTEGER" />
    <result column="column_name" property="columnName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    num, late_all_scale, other_scale, column_avg_level, all_avg_level, column_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.minstone.pojo.JddScaleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jdd_scale
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.minstone.pojo.JddScaleExample" >
    delete from jdd_scale
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.minstone.pojo.JddScale" >
    insert into jdd_scale (num, late_all_scale, other_scale, 
      column_avg_level, all_avg_level, column_name
      )
    values (#{num,jdbcType=INTEGER}, #{lateAllScale,jdbcType=INTEGER}, #{otherScale,jdbcType=INTEGER}, 
      #{columnAvgLevel,jdbcType=INTEGER}, #{allAvgLevel,jdbcType=INTEGER}, #{columnName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.minstone.pojo.JddScale" >
    insert into jdd_scale
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="num != null" >
        num,
      </if>
      <if test="lateAllScale != null" >
        late_all_scale,
      </if>
      <if test="otherScale != null" >
        other_scale,
      </if>
      <if test="columnAvgLevel != null" >
        column_avg_level,
      </if>
      <if test="allAvgLevel != null" >
        all_avg_level,
      </if>
      <if test="columnName != null" >
        column_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="lateAllScale != null" >
        #{lateAllScale,jdbcType=INTEGER},
      </if>
      <if test="otherScale != null" >
        #{otherScale,jdbcType=INTEGER},
      </if>
      <if test="columnAvgLevel != null" >
        #{columnAvgLevel,jdbcType=INTEGER},
      </if>
      <if test="allAvgLevel != null" >
        #{allAvgLevel,jdbcType=INTEGER},
      </if>
      <if test="columnName != null" >
        #{columnName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.minstone.pojo.JddScaleExample" resultType="java.lang.Integer" >
    select count(*) from jdd_scale
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jdd_scale
    <set >
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.lateAllScale != null" >
        late_all_scale = #{record.lateAllScale,jdbcType=INTEGER},
      </if>
      <if test="record.otherScale != null" >
        other_scale = #{record.otherScale,jdbcType=INTEGER},
      </if>
      <if test="record.columnAvgLevel != null" >
        column_avg_level = #{record.columnAvgLevel,jdbcType=INTEGER},
      </if>
      <if test="record.allAvgLevel != null" >
        all_avg_level = #{record.allAvgLevel,jdbcType=INTEGER},
      </if>
      <if test="record.columnName != null" >
        column_name = #{record.columnName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jdd_scale
    set num = #{record.num,jdbcType=INTEGER},
      late_all_scale = #{record.lateAllScale,jdbcType=INTEGER},
      other_scale = #{record.otherScale,jdbcType=INTEGER},
      column_avg_level = #{record.columnAvgLevel,jdbcType=INTEGER},
      all_avg_level = #{record.allAvgLevel,jdbcType=INTEGER},
      column_name = #{record.columnName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!-- 删除某一列的数据 -->
  <delete id="deleteColumnData" parameterType="string">
  	DELETE from jdd_scale where column_name=#{column}
  </delete>
  
  <!-- 统计各列的概率排行 -->
 <select id="queryColumnRank" parameterType="string" resultType="map">
  	SELECT
		*
	FROM
		(
			SELECT
				s1.num,
				s1.rownum1 + s2.rownum2 + s3.rownum3 + s4.rownum4 AS rownum
			FROM
				(
					SELECT
						obj1.num,
						obj1.late_all_scale,
						CASE
					WHEN @rowtotal1 = obj1.late_all_scale THEN
						@rownum1
					WHEN @rowtotal1 := obj1.late_all_scale THEN
						@rownum1 :=@rownum1 + 1
					WHEN @rowtotal1 = 0 THEN
						@rownum1 :=@rownum1 + 1
					END AS rownum1
					FROM
						(
							SELECT
								num,
								late_all_scale
							FROM
								jdd_scale t1
							WHERE
								t1.column_name = #{column}
							ORDER BY
								t1.late_all_scale DESC
						) AS obj1,
						(
							SELECT
								@rownum1 := 0 ,@rowtotal1 := NULL
						) AS r1
				) s1,
				(
					SELECT
						obj2.num,
						obj2.other_scale,
						CASE
					WHEN @rowtotal2 = obj2.other_scale THEN
						@rownum2
					WHEN @rowtotal2 := obj2.other_scale THEN
						@rownum2 :=@rownum2 + 1
					WHEN @rowtotal2 = 0 THEN
						@rownum2 :=@rownum2 + 1
					END AS rownum2
					FROM
						(
							SELECT
								num,
								other_scale
							FROM
								jdd_scale t2
							WHERE
								t2.column_name = #{column}
							ORDER BY
								t2.other_scale DESC
						) AS obj2,
						(
							SELECT
								@rownum2 := 0 ,@rowtotal2 := NULL
						) AS r2
				) s2,
				(
					SELECT
						obj3.num,
						obj3.all_avg_level,
						CASE
					WHEN @rowtotal3 = obj3.all_avg_level THEN
						@rownum3
					WHEN @rowtotal3 := obj3.all_avg_level THEN
						@rownum3 :=@rownum3 + 1
					WHEN @rowtotal3 = 0 THEN
						@rownum3 :=@rownum3 + 1
					END AS rownum3
					FROM
						(
							SELECT
								num,
								all_avg_level
							FROM
								jdd_scale t3
							WHERE
								t3.column_name = #{column}
							ORDER BY
								t3.all_avg_level DESC
						) AS obj3,
						(
							SELECT
								@rownum3 := 0 ,@rowtotal3 := NULL
						) AS r3
				) s3,
				(
					SELECT
						obj4.num,
						obj4.column_avg_level,
						CASE
					WHEN @rowtotal4 = obj4.column_avg_level THEN
						@rownum4
					WHEN @rowtotal4 := obj4.column_avg_level THEN
						@rownum4 :=@rownum4 + 1
					WHEN @rowtotal4 = 0 THEN
						@rownum4 :=@rownum4 + 1
					END AS rownum4
					FROM
						(
							SELECT
								num,
								column_avg_level
							FROM
								jdd_scale t4
							WHERE
								t4.column_name = #{column}
							ORDER BY
								t4.column_avg_level DESC
						) AS obj4,
						(
							SELECT
								@rownum4 := 0 ,@rowtotal4 := NULL
						) r4
				) s4
			WHERE
				s1.num = s2.num
			AND s1.num = s3.num
			AND s1.num = s4.num
		) AS s5
	ORDER BY
		s5.rownum ASC
		
	LIMIT 0,10
  </select>   
  
  <!--  <select id="queryColumnRank" parameterType="string" resultType="map">
  	SELECT
		*
	FROM
		(
			SELECT
				s1.num,
				s1.rownum1 + s2.rownum2 AS rownum
			FROM
				(
					SELECT
						obj1.num,
						obj1.late_all_scale,
						CASE
					WHEN @rowtotal1 = obj1.late_all_scale THEN
						@rownum1
					WHEN @rowtotal1 := obj1.late_all_scale THEN
						@rownum1 :=@rownum1 + 1
					WHEN @rowtotal1 = 0 THEN
						@rownum1 :=@rownum1 + 1
					END AS rownum1
					FROM
						(
							SELECT
								num,
								late_all_scale
							FROM
								jdd_scale t1
							WHERE
								t1.column_name = #{column}
							ORDER BY
								t1.late_all_scale DESC
						) AS obj1,
						(
							SELECT
								@rownum1 := 0 ,@rowtotal1 := NULL
						) AS r1
				) s1,
				(
					SELECT
						obj2.num,
						obj2.other_scale,
						CASE
					WHEN @rowtotal2 = obj2.other_scale THEN
						@rownum2
					WHEN @rowtotal2 := obj2.other_scale THEN
						@rownum2 :=@rownum2 + 1
					WHEN @rowtotal2 = 0 THEN
						@rownum2 :=@rownum2 + 1
					END AS rownum2
					FROM
						(
							SELECT
								num,
								other_scale
							FROM
								jdd_scale t2
							WHERE
								t2.column_name = #{column}
							ORDER BY
								t2.other_scale DESC
						) AS obj2,
						(
							SELECT
								@rownum2 := 0 ,@rowtotal2 := NULL
						) AS r2
				) s2
			WHERE
				s1.num = s2.num
		) AS s5
	ORDER BY
		s5.rownum ASC
		
	LIMIT 0,10
  </select>   -->
  
  <!-- <select id="queryColumnRank" parameterType="string" resultType="map">
  	SELECT
		*
	FROM
		(
			SELECT
				s2.num,
				s2.rownum2 AS rownum
			FROM
				(
					SELECT
						obj2.num,
						obj2.other_scale,
						CASE
					WHEN @rowtotal2 = obj2.other_scale THEN
						@rownum2
					WHEN @rowtotal2 := obj2.other_scale THEN
						@rownum2 :=@rownum2 + 1
					WHEN @rowtotal2 = 0 THEN
						@rownum2 :=@rownum2 + 1
					END AS rownum2
					FROM
						(
							SELECT
								num,
								other_scale
							FROM
								jdd_scale t2
							WHERE
								t2.column_name = #{column}
							ORDER BY
								t2.other_scale DESC
						) AS obj2,
						(
							SELECT
								@rownum2 := 0 ,@rowtotal2 := NULL
						) AS r2
				) s2
		) AS s5
	ORDER BY
		s5.rownum ASC
		
	LIMIT 0,10
  </select>  -->
</mapper>